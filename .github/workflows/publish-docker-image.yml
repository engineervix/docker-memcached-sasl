name: Publish Docker images

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        memcached-version: ["1.6.29"]
        unix-version: ["alpine"]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Get git commit SHA
        id: git_sha
        run: echo "::set-output name=git_sha::$(git rev-parse HEAD)"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: engineervix/memcached-sasl:${{ matrix.memcached-version }}-${{ matrix.unix-version }}
          labels: |
            "org.opencontainers.image.title": "memcached-sasl",
            "org.opencontainers.image.description": "Memcached ${{ matrix.memcached-version }}-${{ matrix.unix-version }} with custom SASL authentication",
            "org.opencontainers.image.url": "https://github.com/engineervix/docker-memcached-sasl",
            "org.opencontainers.image.source": "https://github.com/engineervix/docker-memcached-sasl",
            "org.opencontainers.image.version": "${{ matrix.memcached-version }}-${{ matrix.unix-version }}",
            "org.opencontainers.image.licenses": "MIT",
            "org.opencontainers.image.created": "${{ steps.timestamp.outputs.timestamp }}",
            "org.opencontainers.image.revision": "${{ steps.git_sha.outputs.git_sha }}"
          build-args: |
            MEMCACHED_VERSION=${{ matrix.memcached-version }}
            UNIX_VERSION=${{ matrix.unix-version }}
